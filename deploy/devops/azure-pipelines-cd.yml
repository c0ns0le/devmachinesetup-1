# Pipeline to validate templates and scripts and then
# start a deployment in a staging environment for testing
# then use an approval gate before deploying to production

trigger:
- release

stages:
- stage: buildvalidate
  displayName: 'Validating templates & scripts'
  jobs:
  - job: buildvalidatejob
    displayName: 'Validating and verifying...'
    continueOnError: false
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: devops/azure-pipelines-build.yml
      parameters:
        pSubscriptionId: '$(param.DevSubscription)'
        pVpnDnsName: '$(param.DevVpnDnsName)'
        pVpnCaCertPubEncoded: '$(param.DevCaCertPub)'
        pRgNamePrefix: '$(param.DevRgPrefix)'
        pStorageAccount: '$(param.DevStorageAccount)'
        pAdminUserName: '$(param.DevAdminUserName)'
        pAdminUserPassword: '$(param.DevAdminUserPassword)'
        pAdminUserSshPubKey: '$(param.DevAdminUserSshPubKey)'
        pVnetName: '$(param.DevVnetName)'
        pVnetSubnetId: '$(param.DevVnetsubnetId)'
- stage: deploystaging
  displayName: 'Deploying staging environment...'
  jobs:
  - job: deployStaging
    displayName: 'Deploy to staging...'
    continueOnError: false
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: |
          echo "Deploying to staging after successful CI..."
